# Install node js server
---
- name: "Install nodejs server"
  hosts: all
  user: ubuntu
  become: true

  tasks:
#  - name: download and install node 6 binary
#    shell: curl https://nodejs.org/download/release/v6.17.1/node-v6.17.1-linux-x64.tar.gz | tar --strip-components 1 -xzvf - -C /usr/local

  - name: install npm and app dependencies
    apt:
      name:
        - npm
        - python
        - nodejs
      state: latest
      update_cache: yes

  - name: upgrade npm, use nodejs 14
    shell: npm install -g n && n 14 && npm install -g npm && hash -d npm
    become: true
    register: result
    failed_when: result.rc != 0 and result.rc != 2
    args:
      creates: /usr/local/bin/n

  - name: send and run npm application
    block:
      - name: install supervisord
        apt: name=supervisor state=latest

      - name: send app
        synchronize:
          src: "{{ app }}"
          dest: /opt/

      - name: extract app name
        shell: echo "{{ app | basename }}" | awk -F'_' '{print $1}'
        register: app_name

      - name: stop running app
        supervisorctl:
          name: "{{ app_name.stdout }}"
          state: stopped

      - name: recreate app folder
        shell: rm -rf /opt/{{ app_name.stdout }} && mkdir -p /opt/{{ app_name.stdout }}

      - name: untar to folder
        shell: tar xf /opt/{{app | basename }} --directory /opt/ && chown -R  -R {{appuser}}.{{appuser}} /opt/{{app_name.stdout}}

      - name: copy supervisor template
        template: src=supervisor.j2 dest=/etc/supervisor/conf.d/{{ app_name.stdout }}.conf
        vars:
          nodeapp_name: "{{ app_name.stdout }}"

      - name: reload supervisord
        service:
          name: supervisor
          state: restarted
          enabled: yes

      - name: start nodeapp
        supervisorctl:
          name: "{{ app_name.stdout }}"
          state: started
    when: app is defined
